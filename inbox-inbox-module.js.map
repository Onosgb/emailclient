{"version":3,"sources":["./src/app/inbox/inbox.module.ts","./src/app/inbox/placeholder/placeholder.component.ts","./src/app/inbox/placeholder/placeholder.component.html","./src/app/inbox/email-form/email-form.component.ts","./src/app/inbox/email-form/email-form.component.html","./src/app/inbox/home/home.component.ts","./src/app/inbox/home/home.component.html","./src/app/inbox/email-resolver.service.ts","./src/app/inbox/email-create/email-create.component.html","./src/app/inbox/email-create/email-create.component.ts","./src/app/inbox/email-reply/email-reply.component.html","./src/app/inbox/email-reply/email-reply.component.ts","./src/app/inbox/email-index/email-index.component.html","./src/app/inbox/email-index/email-index.component.ts","./src/app/inbox/not-found/not-found.component.ts","./src/app/inbox/not-found/not-found.component.html","./src/app/inbox/email-show/email-show.component.ts","./src/app/inbox/email-show/email-show.component.html","./src/app/inbox/email.service.ts","./src/app/inbox/inbox-routing.module.ts"],"names":[],"mappings":"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","file":"inbox-inbox-module.js","sourcesContent":["import { SharedModule } from './../shared/shared.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InboxRoutingModule } from './inbox-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { EmailReplyComponent } from './email-reply/email-reply.component';\nimport { EmailShowComponent } from './email-show/email-show.component';\nimport { EmailCreateComponent } from './email-create/email-create.component';\nimport { EmailIndexComponent } from './email-index/email-index.component';\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { EmailFormComponent } from './email-form/email-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    EmailReplyComponent,\n    EmailShowComponent,\n    EmailCreateComponent,\n    EmailIndexComponent,\n    PlaceholderComponent,\n    NotFoundComponent,\n    EmailFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    InboxRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class InboxModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-placeholder',\n  templateUrl: './placeholder.component.html',\n  styleUrls: ['./placeholder.component.css']\n})\nexport class PlaceholderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui placeholder segment\">\n    <div class=\"ui icon header\">\n            <i class=\"envelope outline icon\"></i>\n            Select an email to get started!\n    </div>    \n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Email } from '../email';\nimport {\n  FormGroup,\n  FormControl,\n  AbstractControl,\n  Validators,\n} from '@angular/forms';\n@Component({\n  selector: 'app-email-form',\n  templateUrl: './email-form.component.html',\n  styleUrls: ['./email-form.component.css'],\n})\nexport class EmailFormComponent implements OnInit {\n  @Input() email: Email | any;\n  emailForm: FormGroup = new FormGroup({});\n  @Output() emailSubmit = new EventEmitter();\n  @Input() submitted: boolean = false;\n  constructor() {}\n\n  ngOnInit(): void {\n    const { subject, from, to, text } = this.email;\n    this.emailForm = new FormGroup({\n      to: new FormControl(to, [Validators.required, Validators.email]),\n      from: new FormControl({ value: from, disabled: true }),\n      subject: new FormControl(subject, [Validators.required]),\n      text: new FormControl(text, [Validators.required]),\n    });\n  }\n\n  abs(abs: AbstractControl | null): FormControl {\n    return abs as FormControl;\n  }\n  onSubmit() {\n    if (this.emailForm.invalid) {\n      return;\n    }\n    this.submitted = true;\n    this.emailSubmit.emit(this.emailForm.getRawValue());\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"emailForm\" class=\"ui form\">\n<app-input [control]=\"abs(emailForm.get('to'))\" inputType=\"email\" label=\"To\"></app-input>\n<app-input [control]=\"abs(emailForm.get('from'))\" inputType=\"email\" label=\"From\"></app-input>\n<app-input [control]=\"abs(emailForm.get('subject'))\" inputType=\"text\" label=\"Subject\"></app-input>\n<app-input [control]=\"abs(emailForm.get('text'))\" controlType=\"textarea\" label=\"Text\"></app-input>\n\n<button class=\"ui primary button\" type=\"submit\" [disabled]=\"submitted\">Submit</button>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui grid stackable\">\n    <div class=\"five wide column\">\n        <app-email-create></app-email-create>\n        <app-email-index></app-email-index>\n    </div>\n    <div class=\"eleven wide column\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { Email } from './email';\nimport { EMPTY } from 'rxjs';\nimport { EmailService } from './email.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailResolverService implements Resolve<Email> {\n  constructor(private emailService: EmailService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const { id } = route.params;\n    return this.emailService.getEmail(id).pipe(\n      catchError(() => {\n        this.router.navigateByUrl('/inbox/not-found');\n        return EMPTY;\n      })\n    );\n  }\n}\n","<button (click)=\"showModal = true\" class=\"ui button primary fluid\">Compose</button>\n<app-modal (dismiss)=\"showModal = false \" *ngIf=\"showModal\">\n    <h3 modalTitle>Compose</h3>\n    <app-email-form [email]=\"email\" [submitted] =\"submitted\" (emailSubmit)=\"onSubmit($event)\"></app-email-form>\n</app-modal>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Email } from '../email';\nimport { EmailService } from '../email.service';\n\n@Component({\n  selector: 'app-email-create',\n  templateUrl: './email-create.component.html',\n  styleUrls: ['./email-create.component.css'],\n})\nexport class EmailCreateComponent implements OnInit {\n  showModal = false;\n  submitted: boolean = false;\n  email: Email;\n  constructor(\n    private authService: AuthService,\n    private emailService: EmailService\n  ) {\n    this.email = {\n      id: '',\n      to: '',\n      subject: '',\n      html: '',\n      text: '',\n      from: `${authService.username}@angular-email.com`,\n    };\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(email: any) {\n    // Send the email off via the email service\n    console.log('reaching here', email);\n    this.emailService.sendEmail(email).subscribe((email) => {\n      this.showModal = false;\n      this.submitted = false;\n    });\n  }\n}\n","<button (click)=\"showModal = true\"  class=\"ui button primary\">Repy</button>\n<app-modal *ngIf=\"showModal\" (dismiss)=\"showModal = false\">\n    <div modalTitle>Repy</div>\n    <app-email-form [email]=\"email\" (emailSubmit)=\"onSubmit($event)\"></app-email-form>\n</app-modal>","import { Email } from './../email';\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { EmailService } from '../email.service';\n@Component({\n  selector: 'app-email-reply',\n  templateUrl: './email-reply.component.html',\n  styleUrls: ['./email-reply.component.css'],\n})\nexport class EmailReplyComponent {\n  showModal = false;\n  @Input() email: Email = {\n    id: '',\n    to: '',\n    subject: '',\n    html: '',\n    text: '',\n    from: '',\n  };\n  constructor(private emailService: EmailService) {}\n\n  ngOnChanges(): void {\n    const text = this.email.text.replace(/\\n/gi, '\\n> ');\n    this.email = {\n      ...this.email,\n      from: this.email.to,\n      to: this.email.from,\n      subject: this.email.subject.includes('Re:')\n        ? this.email.subject\n        : `Re:${this.email.subject}`,\n      text: `\\n\\n\\n----------- ${this.email.from} wrote:\\n ${text}`,\n    };\n  }\n  onSubmit(email: Email) {\n    this.emailService.sendEmail(email).subscribe(() => {\n      this.showModal = false;\n    });\n  }\n}\n","<div class=\"ui celled list\">\n    <div class=\"item\" *ngFor=\"let email of emails\">\n        <a [routerLink]=\"email.id\" routerLinkActive=\"active\">\n        <div class=\"content\">\n            <div class=\"header trim\">\n                {{email.subject}}\n            </div>\n            <p class=\"trim\"> {{email.from}}</p>\n        </div>\n    </a>\n    </div>\n</div>","import { EmailService } from './../email.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-email-index',\n  templateUrl: './email-index.component.html',\n  styleUrls: ['./email-index.component.css'],\n})\nexport class EmailIndexComponent implements OnInit {\n  emails: any[] = [];\n  constructor(private emailService: EmailService) {}\n\n  ngOnInit(): void {\n    this.emailService.getEmails().subscribe((emails) => {\n      this.emails = emails;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui placeholder segment\">\n    <div class=\"ui icon header\">\n            <i class=\"search icon\"></i>\n            Email not found!\n    </div>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmailService } from '../email.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Email } from '../email';\n@Component({\n  selector: 'app-email-show',\n  templateUrl: './email-show.component.html',\n  styleUrls: ['./email-show.component.css'],\n})\nexport class EmailShowComponent implements OnInit {\n  email: any | Email;\n  constructor(\n    private route: ActivatedRoute,\n    private emailService: EmailService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(\n        switchMap(({ id }) => {\n          return this.emailService.getEmail(id);\n        })\n      )\n      .subscribe((email) => {\n        this.email = email;\n      });\n  }\n}\n","\n<ng-container  *ngIf=\"email\">\n<div class=\"header\">\n    <div>\n        <h3>{{ email.subject }}</h3>\n    </div>\n    <div>\n    From: <i>{{ email.from }}</i>\n\n    </div>\n    <div>\n        To: <i>{{ email.to }}</i>\n    </div>\n    <div>\n        <app-email-reply [email]=\"email\" ></app-email-reply>\n    </div>\n</div>\n\n<div class=\"ui divider\"></div>\n<div [innerHTML]=\"email.html\">\n</div>\n</ng-container>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Email } from './email';\nconst rootUrl = 'https://api.angular-email.com';\ninterface EmailSumarry {\n  id: string;\n  subject: string;\n  from: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailService {\n  constructor(private http: HttpClient) {}\n\n  getEmails() {\n    return this.http.get<EmailSumarry[]>(`${rootUrl}/emails`);\n  }\n\n  getEmail(id: string) {\n    return this.http.get<Email>(`${rootUrl}/emails/${id}`);\n  }\n\n  sendEmail(email: Email) {\n    return this.http.post<Email>(`${rootUrl}/emails`, email);\n  }\n}\n","import { EmailResolverService } from './email-resolver.service';\nimport { EmailShowComponent } from './email-show/email-show.component';\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      { path: 'not-found', component: NotFoundComponent },\n      {\n        path: ':id',\n        component: EmailShowComponent,\n        resolve: {\n          email: EmailResolverService,\n        },\n      },\n      { path: '', component: PlaceholderComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InboxRoutingModule {}\n"],"sourceRoot":"webpack:///"}