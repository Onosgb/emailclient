{"version":3,"sources":["./src/app/shared/modal/modal.component.ts","./src/app/shared/modal/modal.component.html","./src/app/auth/signin/signin.component.ts","./src/app/auth/signin/signin.component.html","./src/app/auth/auth-routing.module.ts","./src/app/shared/input/input.component.ts","./src/app/shared/input/input.component.html","./src/environments/environment.ts","./src/app/auth/auth.guard.ts","./src/app/shared/shared.module.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/signout/signout.component.ts","./src/app/auth/signout/signout.component.html","./src/app/auth/validators/match-password.ts","./src/app/auth/auth.service.ts","./src/app/app-routing.module.ts","./src/app/auth/validators/unique-username.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/auth/auth-http-interceptor.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {\n  Component,\n  ElementRef,\n  OnInit,\n  EventEmitter,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css'],\n})\nexport class ModalComponent implements OnInit {\n  @Output() dismiss = new EventEmitter();\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    document.body.appendChild(this.el.nativeElement);\n  }\n\n  ngOnDestroy() {\n    document.body.removeChild(this.el.nativeElement);\n  }\n\n  onDismissClick() {\n    this.dismiss.emit();\n  }\n}\n","\n<div class=\"ui dimmer visible active\" (click)=\"onDismissClick();\">\n    <div class=\"ui modal visible active\" (click)=\"$event.stopPropagation();\n    \">\n        <i class=\"close icon\"  (click)=\"onDismissClick()\"></i>\n        <div class=\"header\">\n        <ng-content select=\"[modalTitle]\"></ng-content>\n        </div>\n        <div class=\"content\">\n             <ng-content></ng-content>\n        </div>\n        <div class=\"actions actions-default\">\n            <button class=\"ui button\"  (click)=\"onDismissClick()\">OK</button>\n        </div>\n\n        <div class=\"actions custom\">\n            <ng-content select=\"[modalFooter]\"></ng-content>\n        </div>\n    </div>\n</div>","import { AuthService } from './../auth.service';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  authForm = new FormGroup({\n    username: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/),\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n  });\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n  abs(abs: AbstractControl | null): FormControl {\n    return abs as FormControl;\n  }\n\n  onSubmit() {\n    if (this.authForm.invalid) return;\n\n    this.authService.signin(this.authForm.value).subscribe({\n      next: () => {\n        this.router.navigateByUrl('/inbox');\n      },\n      error: ({ error }) => {\n        if (error.username || error.password) {\n          this.authForm.setErrors({ credentials: true });\n        } else {\n          this.authForm.setErrors({ noConnection: true });\n        }\n      },\n    });\n  }\n}\n","<h3>Sign In</h3>\n\n<form action=\"\" class=\"ui form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n    <app-input inputType=\"text\" label=\"Username\" [control]=\"abs(authForm.get('username'))\"></app-input>\n\n    <app-input inputType=\"password\" label=\"Password\" [control]=\"abs(authForm.get('password'))\"></app-input>\n\n    <div class=\"ui red basic label\" *ngIf=\"authForm.errors\">\n        <p *ngIf=\"authForm.errors.credentials\">\n            Invalid username or password\n        </p>\n        <p *ngIf=\"authForm.errors.noConnection\">\n            No internet connection, Login failed.\n        </p>\n    </div>\n    <div>\n        <button class=\"ui submit button primary\">\n            Submit\n        </button>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { FormControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css'],\n})\nexport class InputComponent implements OnInit {\n  @Input() label = '';\n  @Input() inputType = 'text';\n  @Input() control = new FormControl();\n  @Input() controlType = 'input';\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  showError() {\n    const { dirty, touched, errors } = this.control;\n    return dirty && touched && errors;\n  }\n}\n","<div class=\"field\">\n    <label for=\"\">{{label}}</label>\n    <input *ngIf=\"controlType === 'input'\" [type]=\"inputType\" [formControl]=\"control\" />\n    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" *ngIf=\"controlType === 'textarea'\" [formControl]=\"control\" ></textarea>\n    <div class=\"ui pointing red basic label\" *ngIf=\"showError()\">\n        <p *ngIf=\"control.errors?.required\">\n            Value is required\n        </p>\n        <p *ngIf=\"control.errors?.email\">\n           Enter a valid email address\n        </p>\n        <p *ngIf=\"control.errors?.minlength\">\n            Value entered is {{control.errors?.minlength.actualLength}} \n            characters long, but  it must be at least \n            {{control.errors?.minlength.requiredLength}}\n            characters\n        </p>\n\n        <p *ngIf=\"control.errors?.maxlength\">\n            Value entered is {{control.errors?.maxlength.actualLength}} \n            character long, but  it must no be greater than\n            {{control.errors?.maxlength.requiredLength}}\n            characters\n        </p>\n\n        <p *ngIf=\"control.errors?.pattern\">\n            Invalid format\n        </p>\n\n        <p *ngIf=\"control.errors?.nonUniqueUsername\">\n            Username is taken\n        </p>\n\n        <p *ngIf=\"control.errors?.noConnection\">\n            Can't tell if username is taken\n        </p>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router, UrlSegment, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { skipWhile, take, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.authService.signedin$.pipe(\n      skipWhile((value) => value === null),\n      take(1),\n      tap((authenticated) => {\n        if (!authenticated) this.router.navigateByUrl('/');\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputComponent } from './input/input.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ModalComponent } from './modal/modal.component';\n\n@NgModule({\n  declarations: [InputComponent, ModalComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [InputComponent, ModalComponent],\n})\nexport class SharedModule {}\n","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { MatchPassword } from '../validators/match-password';\nimport { UniqueUsername } from '../validators/unique-username';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  authForm = new FormGroup(\n    {\n      username: new FormControl(\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(20),\n          Validators.pattern(/^[a-z0-9]+$/),\n        ],\n        [this.uniqueUsername.validate]\n      ),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20),\n      ]),\n      passwordConfirmation: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20),\n      ]),\n    },\n    {\n      validators: [this.matchPassword.validate],\n    }\n  );\n  constructor(\n    private matchPassword: MatchPassword,\n    private uniqueUsername: UniqueUsername,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n  ngOnInit(): void {}\n\n  abs(abs: AbstractControl | null): FormControl {\n    return abs as FormControl;\n  }\n\n  onSubmit() {\n    if (this.authForm.invalid) return;\n\n    this.authService.signup(this.authForm.value).subscribe({\n      next: () => {\n        this.router.navigateByUrl('/inbox');\n      },\n      error: (err) => {\n        if (!err.status) {\n          this.authForm.setErrors({ noConnection: true });\n        } else {\n          this.authForm.setErrors({ unknownError: true });\n        }\n      },\n    });\n  }\n}\n","<h3>Create an Account</h3>\n\n<form class=\"ui form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n  <app-input label=\"Username\" inputType=\"text\" [control]=\"abs(authForm.get('username'))\"></app-input>\n  <app-input label=\"Password\" inputType=\"password\" [control]=\"abs(authForm.get('password'))\"></app-input>\n  <app-input label=\"Password Confirmation\" inputType=\"password\" [control]=\"abs(authForm.get('passwordConfirmation'))\"></app-input>\n  <div class=\"ui red basic label\" *ngIf=\"\n  authForm.get('password')?.touched &&\n  authForm.get('passwordConfirmation')?.touched &&\n  authForm.errors\n  \">\n    <p *ngIf=\"authForm.errors?.passwordsDontMatch\">\n      Password and passord confirmation must match\n    </p>\n\n    <p *ngIf=\"authForm.errors.noConnection\">\n      No internet detection, failed to sign up\n    </p>\n\n    <p *ngIf=\"authForm.errors.unknownError\">\n      Fail to sign up\n    </p>\n  </div>\n  <button class=\"ui submit button primary\" type=\"submit\">Submit</button>\n</form>","import { AuthService } from './auth/auth.service';\nimport { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  signedin$ = new BehaviorSubject(false);\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.signedin$ = this.authService.signedin$;\n    this.authService.checkAuth().subscribe(() => {});\n  }\n}\n","<div class=\"ui container\">\r\n    <div class=\"ui secondary pointing menu\">\r\n        <a routerLink=\"/\" class=\"item\">Angular Email</a>\r\n\r\n        <div class=\"right menu\">\r\n            <ng-container *ngIf=\"signedin$ | async\">\r\n            <a  class=\"ui item\" routerLink=\"/inbox\" routerLinkActive=\"active\">\r\n            Inbox\r\n            </a>\r\n            <a  class=\"ui item\" routerLink=\"/signout\" routerLinkActive=\"active\">\r\n                Sign Out\r\n             </a>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!(signedin$ | async)\">\r\n\r\n             <a  class=\"ui item\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n                Sign In\r\n            </a>\r\n            <a  class=\"ui item\" routerLink=\"/signup\" routerLinkActive=\"active\">\r\n                Sign Up\r\n                </a>\r\n                </ng-container>\r\n        </div>\r\n    </div>\r\n<router-outlet></router-outlet>\r\n\r\n</div>","import { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignoutComponent } from './signout/signout.component';\n\n@NgModule({\n  declarations: [SigninComponent, SignupComponent, SignoutComponent],\n  imports: [CommonModule, AuthRoutingModule, ReactiveFormsModule, SharedModule],\n})\nexport class AuthModule {}\n","import { AuthModule } from './auth/auth.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthHttpInterceptor } from './auth/auth-http-interceptor';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, AuthModule, HttpClientModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthHttpInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signout',\n  templateUrl: './signout.component.html',\n  styleUrls: ['./signout.component.css'],\n})\nexport class SignoutComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.signOut().subscribe(() => {\n      this.router.navigateByUrl('/');\n    });\n  }\n}\n","<h1>Signing you out....</h1>","import { Injectable } from '@angular/core';\nimport { Validator, FormGroup, AbstractControl } from '@angular/forms';\n\n@Injectable({ providedIn: 'root' })\nexport class MatchPassword implements Validator {\n  validate(FormGroup: AbstractControl) {\n    const { password, passwordConfirmation } = FormGroup.value;\n    if (password === passwordConfirmation) {\n      return null;\n    } else {\n      return { passwordsDontMatch: true };\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { skipWhile, tap } from 'rxjs/operators';\nconst url = 'https://api.angular-email.com/';\ninterface UniqueAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\n\ninterface SignupResponse {\n  username: string;\n}\n\ninterface SignedinResponse {\n  authenticated: boolean;\n  username: string;\n}\n\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\n\ninterface SignupResponse {\n  username: string;\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  signedin$: any = new BehaviorSubject(null);\n  username = '';\n  constructor(private http: HttpClient) {}\n\n  usernameAvailable(username: string) {\n    return this.http.post<UniqueAvailableResponse>(url + 'auth/username', {\n      username: username,\n    });\n  }\n\n  signup(credentials: SignupCredentials) {\n    return this.http\n      .post<SignupResponse>(url + 'auth/signup', credentials)\n      .pipe(\n        tap(({ username }) => {\n          this.signedin$.next(true);\n          this.username = username;\n        })\n      );\n  }\n\n  checkAuth() {\n    return this.http.get<SignedinResponse>(url + 'auth/signedin').pipe(\n      tap(({ authenticated, username }) => {\n        this.signedin$.next(authenticated);\n        this.username = username;\n      })\n    );\n  }\n\n  signOut() {\n    return this.http.post(url + 'auth/signout', {}).pipe(\n      skipWhile((value) => value === null),\n      tap(() => {\n        this.signedin$.next(false);\n      })\n    );\n  }\n\n  signin(credentials: SigninCredentials) {\n    return this.http\n      .post<SignupResponse>(url + 'auth/signin', credentials)\n      .pipe(\n        tap(({ username }) => {\n          this.signedin$.next(true);\n          this.username = username;\n        })\n      );\n  }\n}\n","import { SignoutComponent } from './auth/signout/signout.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nconst routes: Routes = [\n  { path: 'signout', component: SignoutComponent },\n  { path: 'signup', component: SignupComponent },\n  {\n    path: 'inbox',\n    canLoad: [AuthGuard],\n    loadChildren: () =>\n      import('./inbox/inbox.module').then((m) => m.InboxModule),\n  },\n  { path: '', component: SigninComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { AuthService } from './../auth.service';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidator } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class UniqueUsername implements AsyncValidator {\n  constructor(private authService: AuthService) {}\n\n  validate = (control: AbstractControl) => {\n    return this.authService.usernameAvailable(control.value).pipe(\n      map((value) => null),\n      catchError((err) => {\n        if (err.error.username) return of({ nonUniqueUsername: true });\n        return of({ noConnection: true });\n      })\n    );\n  };\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpEventType,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthHttpInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // Modify or log the out going request\n    const modifiedReq = req.clone({\n      withCredentials: true,\n    });\n    return next.handle(modifiedReq);\n  }\n}\n"],"sourceRoot":"webpack:///"}